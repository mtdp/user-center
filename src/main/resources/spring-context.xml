<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xmlns:context="http://www.springframework.org/schema/context"  
	  xmlns:aop="http://www.springframework.org/schema/aop"
	  xmlns:tx="http://www.springframework.org/schema/tx"
	  xsi:schemaLocation="
	  http://www.springframework.org/schema/beans  
	  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	  http://www.springframework.org/schema/aop  
	  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	  http://www.springframework.org/schema/tx  
	  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	  http://www.springframework.org/schema/context   
      http://www.springframework.org/schema/context/spring-context-3.0.xsd">
      		
		   <!-- 采用注释的方式配置bean -->   
	       <context:annotation-config />   
	       <!-- 配置要扫描的包 -->   
	       <context:component-scan base-package="me.wanx"/>
	       <!-- 注解事务 -->
	       <tx:annotation-driven transaction-manager="transactionManager" />
           <!-- 数据库配置文件位置    这个配置是PropertyPlaceholderConfigurer bean的简写配置
 		   <context:property-placeholder location="classpath:jdbc.properties" />
 		   -->
 		   
 		   <!-- 加载配置文件 -->
	       <bean id="propertyConfigurer" class="me.wanx.common.core.utils.ProPConfigurer" lazy-init="false">
		        <property name="locations">
		            <list>
		                <value>classpath:usercenter.properties</value>
		                <value>classpath:usercenter.dev.properties</value>
		                <value>classpath:usercenter.test.properties</value>
		                <value>classpath:usercenter.prod.properties</value> 
		            </list>
		        </property>
		        <!-- 找不到以上配置不会报错 -->
		        <property name="ignoreResourceNotFound" value="true"/>
		        <!-- 忽略不可解析的配置文件 -->
		        <property name="ignoreUnresolvablePlaceholders" value="true"/>
	       </bean> 
 		   
 		   <!-- druid 数据库连接池 -->
 		   <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
 		   		 <property name="url" value="${jdbc.url}" />
			     <property name="username" value="${jdbc.username}"/>
			     <property name="password" value="${jdbc.password}"/>
			     
			     <property name="filters" value="stat"/>

			     <property name="maxActive"><value>20</value></property>
			     <property name="initialSize"><value>1</value></property>
			     <property name="maxWait"><value>60000</value></property>
			     <property name="minIdle"><value>1</value></property>
			
			     <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
			     <property name="minEvictableIdleTimeMillis"><value>300000</value></property>
			
			     <property name="validationQuery"><value>SELECT 'x'</value></property>
			     <property name="testWhileIdle"><value>true</value></property>
			     <property name="testOnBorrow"><value>false</value></property>
			     <property name="testOnReturn"><value>false</value></property>
			
			     <property name="poolPreparedStatements"><value>true</value></property>
			     <property name="maxOpenPreparedStatements"><value>20</value></property>
			     <!-- 监控日志保存到文件 -->
			     <property name="timeBetweenLogStatsMillis" value="300000" />
 		   </bean>
 		   <!-- SqlSessionFactory -->
		   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		    	<property name="dataSource" ref="druidDataSource" />
		    	<property name="typeAliasesPackage" value="me.wanx" />
		    	<property name="configLocation" value="classpath:mybatis-config.xml"/>
		   </bean> 
		   <!-- ScanMapperFiles -->
		   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		    	<property name="basePackage" value="me.wanx" />
		    	<property name="markerInterface" value="me.wanx.common.core.persistence.BaseMapper"/>
		   </bean>
		   <!-- 事务配置 -->
  		   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       			<property name="dataSource" ref="druidDataSource" />
   		   </bean>
   		   
   		   <!-- 拦截器配置事务 start-->
   		   <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
   		   		<property name="transactionManager" ref="transactionManager"/>
   		   		<!-- 事务属性 -->
   		   		<property name="transactionAttributes">
   		   			<props>
   		   				<prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
   		   				<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
   		   				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
   		   				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
   		   			</props>
   		   		</property>	
   		   </bean>
   		   <!--
   		   <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
   		   		<property name="beanNames">
   		   			<list>
   		   				<value>*ServiceImpl</value>
   		   			</list>
   		   		</property>
   		   		<property name="interceptorNames">
   		   			<list>
   		   				<value>transactionInterceptor</value>
   		   				 记录每个service方法执行的时间 
   		   				<value>recordMethodExeTimeServiceImpl</value>
   		   			</list>
   		   		</property>
   		   </bean>
   		   -->
	  	  <!-- 拦截器配置事务 end-->
	  	   
	  	   <!-- tx配置事务 start -->
	  	   <tx:advice id="txAdvice" transaction-manager="transactionManager">
		        <tx:attributes>
		            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
		            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
		            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
		            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
		        </tx:attributes>
		   </tx:advice>
		   <!-- 第一个*代表所有的返回值类型;第二个*代表所有的类;第三个*代表类所有方法;最后一个..代表所有的参数 -->
	       <aop:config>
		        <aop:pointcut id="interceptorPointCuts" expression="execution(* me.wanx.usercenter.service.*.*(..))" />
		        <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />    
		        <!-- aop日志拦截-->
		        <aop:advisor advice-ref="recordMethodExeTimeServiceImpl" pointcut-ref="interceptorPointCuts"/>    
	       </aop:config> 
	  	   <!-- tx配置事务 end -->
	  	   
	  	   <!-- import -->
	  	   <import resource="spring-shiro.xml"/>
</beans>