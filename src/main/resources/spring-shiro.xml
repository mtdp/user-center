<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xmlns:context="http://www.springframework.org/schema/context"  
	  xmlns:aop="http://www.springframework.org/schema/aop"
	  xmlns:tx="http://www.springframework.org/schema/tx"
	  xsi:schemaLocation="
	  http://www.springframework.org/schema/beans  
	  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	  http://www.springframework.org/schema/aop  
	  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	  http://www.springframework.org/schema/tx  
	  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	  http://www.springframework.org/schema/context   
      http://www.springframework.org/schema/context/spring-context-3.0.xsd">
      
    <!-- 缓存管理器 使用Ehcache实现 
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
	     <property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>
	</bean>
	-->
	<!-- 会话DAO 
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
	    <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
	    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>
	-->
	<!-- 会话ID生成器
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	 -->
	<!-- 单机shiro自己实现的缓存
	<bean id="memoryConstrainedCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>
	-->
	
	<!-- redis缓存管理器 start-->
	<bean id="redisManager" class="me.wanx.common.core.persistence.RedisManager" init-method="init">
		<property name="host" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		<property name="expire" value="1800"/>
	</bean>
	<bean id="redisCacheManager" class="me.wanx.usercenter.shiro.cache.RedisCacheManager">
		<property name="redisManager" ref="redisManager"/>
	</bean>
	<bean id="redisSessionDAO" class="me.wanx.usercenter.shiro.cache.RedisSessionDAO">
		<property name="redisManager" ref="redisManager"/>
	</bean>
	<!-- end -->
	
    <!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg value="sid"/>
	    <property name="httpOnly" value="true"/>
	    <property name="maxAge" value="180000"/>
	</bean>
	
	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="globalSessionTimeout" value="1800000"/>
	    <property name="deleteInvalidSessions" value="true"/>
	    <property name="sessionValidationSchedulerEnabled" value="true"/>
	    <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
	   <!--  <property name="sessionDAO" ref="sessionDAO"/> -->
	    <property name="sessionDAO" ref="redisSessionDAO"/>
	    <property name="sessionIdCookieEnabled" value="true"/>
	    <property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>
	
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userCenterRealmImpl"/>
	    <property name="sessionManager" ref="sessionManager"/>
	    <!-- <property name="cacheManager" ref="cacheManager"/> -->
	    <property name="cacheManager" ref="redisCacheManager"/>
	</bean>	
	
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
	    <property name="sessionValidationInterval" value="1800000"/>
	    <property name="sessionManager" ref="sessionManager"/>
	</bean>	
	
	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
	    <property name="usernameParam" value="user.account"/>
	    <property name="passwordParam" value="user.password"/>
	    <property name="loginUrl" value="/login.jsp"/>
	</bean>
	
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/login.jsp"/>
	    <property name="successUrl" value="/home.jsp"/>
	    <!-- 没有权限默认页面 -->
	    <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
	    <!-- 
	    <property name="filters">
	        <map>
	            <entry key="authc" value-ref="formAuthenticationFilter"/>
	        </map>
	    </property>
	     -->
	    <property name="filterChainDefinitions">
	        <value>
	            /index.jsp = anon
	            /unauthorized.jsp = anon
	            /user/login.do = anon
	            <!-- 需要认证的 -->
	            /login.jsp = anon
	            /logout = logout
	            <!-- /**=user表示/目前及子目录都需要已经登录的用户才可以访问,/**=authc表示需要登录才可以访问-->
	            /** = anon
	            /res/res.do = roles[admin]
	        </value>
	    </property>
	</bean>
	
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
	    <property name="arguments" ref="securityManager"/>
	</bean>
	
	<!-- Shiro生命周期处理器 -->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>